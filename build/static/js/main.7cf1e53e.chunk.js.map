{"version":3,"sources":["services/authheader.js","services/user.service.js","store/actions/type.js","services/auth.service.js","store/actions/imgs.js","components/DrawerList/index.js","components/Nav/index.js","store/actions/auth.js","pages/Home/index.js","pages/Collection/index.js","pages/Profile/index.js","App.js","reportWebVitals.js","store/reducers/auth.js","store/reducers/message.js","store/reducers/imgs.js","store/reducers/index.js","store/index.js","index.js"],"names":["authHeader","user","JSON","parse","localStorage","getItem","access_token","Authorization","API_URL","axios","get","tag","formdata","post","headers","title","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","GETALL","SETLOADING","GETBYTAG","SETNOIMAGES","SETIMAGES","username","password","then","res","data","setItem","stringify","catch","error","useHistory","push","removeItem","email","avatarurl","setLoading","type","getAllImgs","dispatch","UserService","getAll","value","imgs","err","console","log","getTags","getByTag","length","useStyles","makeStyles","theme","linkLight","color","textDecoration","DrawerList","props","classes","className","to","pathname","state","collection","ListItem","button","ListItemText","primary","id","menuButton","marginRight","spacing","display","breakpoints","up","search","position","flexGrow","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","drawer","maxWidth","subheader","grow","loginButtons","loginFields","margin","loginContent","uploadButton","accountButton","dropspace","flex","flexDirection","borderWidth","borderColor","borderStyle","outline","marginBottom","collectionSelect","marginTop","titleLink","uploadSpinner","overflow","profileLink","uploadDialog","Alert","elevation","variant","connect","isLoggedIn","auth","message","onLogIn","AuthService","login","payload","Promise","resolve","response","toString","reject","onSearch","onAllImgs","onLogout","logout","useState","open","setOpen","loginOpen","setLoginOpen","registerOpen","setRegisterOpen","collections","setCollections","setUsername","setPassword","success","setSuccess","loginError","setLoginError","upload","setUpload","anchorEl","setAnchorEl","newCollection","setNewCollection","setCollection","collectsuccess","setCollectSuccess","collecterror","setCollectError","file","setFile","selectedCollection","setSelectedCollection","openMenu","Boolean","uploading","setUploading","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","registerEmail","setRegisterEmail","profilePic","setProfilePic","history","closeCollectSuccess","closeCollectError","handleRegisterClose","closeSuccess","closeError","closeUpload","handleCollectionClose","useEffect","getCollections","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Typography","href","InputBase","onChange","e","target","window","location","reload","root","input","inputProps","Tooltip","arrow","Button","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Drawer","anchor","List","component","ListSubheader","map","c","ListItemIcon","Dialog","DialogContent","TextField","autoFocus","label","DialogActions","preventDefault","Snackbar","autoHideDuration","severity","CircularProgress","onDrop","acceptedFiles","getRootProps","getInputProps","name","FormControl","InputLabel","Select","labelId","FormData","append","upld","DialogTitle","fullWidth","InputProps","startAdornment","InputAdornment","files","register","spinner","top","transform","gridTitle","visibility","grid","downloadLink","loading","noImages","useTheme","columns","useMediaQuery","down","Container","GridList","cellHeight","cols","i","GridListTile","src","imageurl","alt","tags","GridListTileBar","subtitle","actionIcon","test","fontFamily","Collection","useLocation","size","setNoImages","Paper","profilebox","avatar","profile","setProfile","isloading","setIsLoading","hasImages","setHasImages","images","Avatar","pic","gutterBottom","App","setInterval","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","intialState","initialState","combineReducers","action","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","createMuiTheme","main","light","dark","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.7cf1e53e.chunk.js","sourcesContent":["export default function authHeader(){\n    const user = JSON.parse(localStorage.getItem('user'))\n\n    if (user.access_token){\n        return  {Authorization: `Bearer ${user.access_token}`, 'Content-Type': 'multipart/form-data'}\n    } else {\n        return {}\n    }\n}","import axios from 'axios'\nimport authHeader from './authheader'\nconst API_URL = 'https://imgl.azurewebsites.net/'\n\nclass UserService {\n    getAll(){\n        return axios.get(API_URL + \"all\")\n    }\n    getCollections(){\n        return axios.get(API_URL + \"collections\")\n    }\n    getByTag(tag){\n        return axios.get(API_URL + \"tag/\" + tag)\n    }\n    upld(formdata){\n        return axios.post(API_URL + \"upld\",formdata,{headers: authHeader()} )\n    }\n    newCollection(title){\n        return axios.post(API_URL + \"newcollection\",{\"title\": title})\n    }\n    register(formdata){\n        return axios.post(API_URL + \"register\", formdata)\n    }\n    \n}\n\n\nexport default new UserService()","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\nexport const GETALL = 'GETALL'\nexport const SETLOADING = 'SETLOADING'\nexport const GETBYTAG = 'GETBYTAG'\nexport const NEWCOLLECT = 'NEWCOLLECT'\nexport const SETNOIMAGES = 'SETNOIMAGES'\nexport const SETIMAGES = 'SETIMAGES'","import axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nconst API_URL = 'https://imgl.azurewebsites.net/'\n\nclass AuthService {\n    login(username,password){\n        return axios\n        .post(API_URL + \"login\", {\n            \"username\":username, \n            \"password\":password\n        })\n        .then((res) => {\n            if (res.data.access_token) {\n                localStorage.setItem(\"user\", JSON.stringify(res.data))\n            }\n            return res.data\n        })\n        .catch((error) => {\n            let history = useHistory()\n            history.push(\"/hello\")\n        })\n    \n    }\n\n    logout() {\n        localStorage.removeItem(\"user\")\n    }\n\n    register(username,password,email,avatarurl){\n        return axios.post(API_URL + \"register\", {\n            username,\n            password,\n            email,\n            avatarurl\n        })\n    }\n}\n\nexport default new AuthService()","import UserService from '../../services/user.service'\nimport {GETALL,SETLOADING,GETBYTAG,SETNOIMAGES, SETIMAGES} from '../actions/type'\n\nexport const getAll = (res) => {\n    return{\n        type: GETALL,\n        value: res\n    }\n}\nexport const setLoading = () => {\n    return{\n        type:SETLOADING\n    }\n}\n\nexport const getByTag = (res) => {\n    return{\n        type: GETBYTAG,\n        value: res\n    }\n}\nexport const setNoImages = () => {\n    return{\n        type:SETNOIMAGES\n    }\n}\nexport const setImages = () => {\n    return{\n        type:SETIMAGES\n    }\n}\n\n\nexport const getAllImgs = () => {\n    return dispatch => {\n        UserService.getAll()\n        .then(res => {\n            dispatch(getAll(res.data.imgs))\n            dispatch(setLoading())\n            \n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n}\n\nexport const getTags = (tag) => (dispatch) => {\n    return UserService.getByTag(tag)\n    .then(res => {\n        if(res.data.imgs.length < 1){\n            dispatch(setNoImages())\n        }else{\n            dispatch(setImages())\n        }\n        dispatch(getByTag(res.data.imgs))\n        dispatch(setLoading())\n        \n        \n    })\n    .catch(err => {\n        console.log(err)\n    })\n}\n\n","import ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport {Link} from 'react-router-dom'\nimport {makeStyles} from '@material-ui/core/styles'\nconst useStyles = makeStyles((theme) => ({\n    linkLight: {\n        color:'#212121',\n        textDecoration: 'none'\n    }\n}))\nconst DrawerList = (props) => {\n    const classes = useStyles()\n    return (\n        \n            <Link\n            className={classes.linkLight}\n            to={{\n               pathname: `/c/${props.title}`,\n               state: props.collection \n            }}>\n            <ListItem button key={props.id}>\n                <ListItemText primary={props.title}></ListItemText>\n            </ListItem>\n            </Link>\n        \n    )\n}\n\nexport default DrawerList","import AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport IconButton from '@material-ui/core/IconButton';\nimport {fade, makeStyles} from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport SearchIcon from '@material-ui/icons/Search'\nimport InputBase from '@material-ui/core/InputBase'\nimport Drawer from '@material-ui/core/Drawer'\nimport {useState, useEffect} from 'react'\nimport UserService from '../../services/user.service'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent'\nimport TextField from '@material-ui/core/TextField'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport {connect} from 'react-redux'\nimport {login} from '../../store/actions/auth'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {getTags, getAllImgs} from '../../store/actions/imgs'\nimport Dropzone from 'react-dropzone'\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {logout} from '../../store/actions/auth'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport AddIcon from '@material-ui/icons/Add';\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport DrawerList from '../DrawerList'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport EmailIcon from '@material-ui/icons/Email';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n\n        display: 'none',\n        [theme.breakpoints.up('sm')]:{\n            display: 'block'\n        },\n        fontFamily: [\n            'Pacifico',\n            'cursive'\n        ],\n    },\n    search: {\n        position: 'relative',\n        display: 'flex',\n        flexGrow: 5,\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(4),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto'\n        }\n    },\n    searchIcon: {\n        padding: theme.spacing(0,2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    inputRoot: {\n        color: '#fafafa'\n    },\n    inputInput:{\n        padding: theme.spacing(1,1,1,0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch'\n        }\n\n    },\n    drawer: {\n        width: 300,\n        maxWidth: 360\n    },\n    subheader:{\n        color: '#212121'\n    },\n    grow: {\n        flexGrow: 1\n    },\n    loginButtons:{\n        display: 'none',\n        [theme.breakpoints.up('sm')]:{\n            display: 'block'\n        }\n    },\n    loginFields: {\n        margin: 3,\n        padding: 9,\n    },\n    loginContent:{\n        justifyContent: 'center'\n    },\n    uploadButton:{\n        backgroundColor: '#43a047',\n        \n    },\n    accountButton:{\n        marginLeft: theme.spacing(4)\n    },\n    dropspace:{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '20px',\n        borderWidth: 2,\n        borderRadius: 2,\n        borderColor: '#eeeeee',\n        borderStyle: 'dashed',\n        backgroundColor: '#fafafa',\n        color: '#bdbdbd',\n        outline: 'none',\n        transition: 'border .24s ease-in-out',\n        marginBottom: 10  \n    },\n    collectionSelect:{\n        width: '100%',\n        marginTop: 3\n    },\n    titleLink: {\n        textDecoration: 'none',\n        color:'#fafafa'\n    },\n    uploadSpinner:{\n        padding: '50px',\n        overflow: 'hidden'\n    },\n    profileLink:{\n        textDecoration: 'none',\n        color: '#212121'\n    },\n    uploadDialog:{\n        overflow:'hidden'\n    },\n    margin:{\n        margin: 10\n    }\n}))\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\nconst Nav = (props) => {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n    const [loginOpen, setLoginOpen] = useState(false)\n    const [registerOpen, setRegisterOpen] = useState(false)\n    const [collections, setCollections] = useState([])\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [success, setSuccess] = useState(false)\n    const [loginError, setLoginError] = useState(false)\n    const [upload, setUpload] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [newCollection, setNewCollection] = useState(false)\n    const [collection, setCollection] = useState(\"\")\n    const [collectsuccess, setCollectSuccess] = useState(false)\n    const [collecterror, setCollectError] = useState(false)\n    const [file, setFile] = useState(null)\n    const [selectedCollection, setSelectedCollection] = useState(\"\")\n    const openMenu = Boolean(anchorEl)\n    const [uploading, setUploading] = useState(false)\n    const [registerUsername, setRegisterUsername] = useState(\"\")\n    const [registerPassword, setRegisterPassword] = useState(\"\")\n    const [registerEmail, setRegisterEmail] = useState(\"\")\n    const [profilePic, setProfilePic] = useState([])\n    let history = useHistory();\n    const openDrawer = () => {\n        setOpen(true)\n    }\n    let user = null\n    if(props.isLoggedIn){\n        user = JSON.parse(localStorage.getItem('user'))\n        \n    }\n    const closeCollectSuccess = () => {\n        setCollectSuccess(false)\n    }\n    \n    const closeCollectError = () => {\n        setCollectError(false)\n    }\n    const closeDrawer = () => {\n        setOpen(false)\n    }\n    const handleCollectedSelection = (e) => {\n        setSelectedCollection(e.target.value)\n        console.log(selectedCollection)\n    }\n    const openLogin = () => {\n        setLoginOpen(true)\n    }\n    const closeLogin = () => {\n        setLoginOpen(false)\n    }\n    const handleRegisterClose = () =>{\n        setRegisterOpen(false)\n    }\n    const handleRegisterOpen = () => {\n        setRegisterOpen(true)\n    }\n    const closeSuccess = () => {\n        setSuccess(false)\n    }\n    const closeError = () => {\n        setLoginError(false)\n    }\n    const openUpload = () => {\n        setUpload(true)\n    }\n    const closeUpload = () => {\n        setUpload(false)\n    }\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget)\n    }\n    const handleMenuClose = () => {\n        setAnchorEl(null)\n    }\n    const resetSearch = () =>{\n        history.push(\"/\")\n    }\n    const drop = (acceptedFiles) => {\n        setFile(acceptedFiles[0])\n        console.log(file)\n    }\n    // const openRegister = () => {\n    //     setRegisterOpen(true)\n    // }\n    // const closeRegister = () => {\n    //     setRegisterOpen(false)\n    // }\n    const handleUsernameChange = (e) =>{\n        setUsername(e.target.value)\n      }\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value)\n      }\n    const handleCollectionChange = (e) => {\n        setCollection(e.target.value)\n    }\n    const handleRegisterUsernameChange = (e) => {\n        setRegisterUsername(e.target.value)\n    }\n    const handleRegisterPasswordChange  = (e) => {\n        setRegisterPassword(e.target.value)\n    }\n    const handleRegisterEmailChange = (e) => {\n        setRegisterEmail(e.target.value)\n    }\n    const handleFileChange = (e) => {\n        setProfilePic(e.target.files[0])\n    }\n    const handleLogin = (e) => {\n        e.preventDefault()\n        props.onLogIn(username,password)\n        .then(()=>{\n            setSuccess(true)\n            setLoginOpen(false)\n\n        })\n        .catch((error) => {\n            setLoginError(true)\n            console.log(error)\n        })\n\n    }\n    const handleLogout = () => {\n        props.onLogout()\n        setAnchorEl(null)\n    }\n    const handleSearch = (e) => {\n        props.onSearch(e.target.value)\n        if (e.target.value === \"\"){\n            window.location.reload()\n        }\n    }\n    const handleUpload = () => {\n        const formdata = new FormData()\n        formdata.append(\"imageurl\",file, file.name)\n        formdata.append(\"user_id\", user.user[0].id)\n        formdata.append(\"collections_id\", selectedCollection)\n        setUploading(true)\n        UserService.upld(formdata)\n        .then(() => {\n            setUpload(false)\n            setUploading(false)\n        })\n        .catch((err) =>{\n            console.log(err)\n            setCollectError(true)\n        })\n    }\n    const handleRegister = () => {\n        const formdata = new FormData()\n        formdata.append(\"username\", registerUsername)\n        formdata.append(\"password\", registerPassword)\n        formdata.append(\"email\", registerEmail)\n        formdata.append(\"profilepic\", profilePic, profilePic.name)\n        UserService.register(formdata)\n        .then(res => {\n            setRegisterOpen(false)\n        })\n        .catch((err) => {\n            console.log(err)\n            setCollectError(true)\n        })\n    }\n    const submitCollection = () => {\n        UserService.newCollection(collection)\n        .then(() => {\n            setNewCollection(false)\n            setCollectSuccess(true)\n        })\n        .catch((err) => {\n            setCollectError(true)\n            console.log(err)\n        })\n    }\n    const handleCollectionOpen = () => {\n        setNewCollection(true)\n    }\n    const handleCollectionClose = () => {\n        setNewCollection(false)\n    }\n    useEffect(() => {\n        UserService.getCollections()\n        .then(res => {\n            setCollections(res.data.collections)\n        })\n    },[])\n    \n    return(\n        \n        <AppBar position=\"fixed\">\n           <Toolbar>\n               <IconButton edge=\"start\" className={classes.menuButton} color=\"secondary\" aria-label=\"open-drawer\" onClick={openDrawer}>\n                   <MenuIcon/>\n               </IconButton>\n               <Typography className={classes.title} variant=\"h6\">\n                   <a href=\"/\" className={classes.titleLink}>\n                    Imgfly\n                    </a>\n                   </Typography>\n               <div className={classes.search}>\n                   <div className={classes.searchIcon}>\n                    <SearchIcon/>\n                   </div>\n                   <InputBase onChange={handleSearch} onClick={resetSearch} classes={{root: classes.inputRoot, input: classes.inputInput}} inputProps={{'aria-label': 'search'}}/>\n                </div>\n                <div className={classes.grow} />\n                {props.isLoggedIn ? (\n                    <>\n                    <Tooltip title=\"Upload\" arrow>\n                    <Button variant=\"contained\" onClick={openUpload} className={classes.uploadButton}>\n                      <CloudUploadIcon/>\n                  </Button>\n                  </Tooltip>\n                  \n                  <IconButton aria-controls=\"menu-appbar\" aria-haspopup=\"true\" onClick={handleMenu} className={classes.accountButton} color=\"secondary\">\n                      <AccountCircle/>\n                  </IconButton>\n                  <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  open={openMenu}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  onClose={handleMenuClose}>\n                      <MenuItem>\n                      <a href=\"/profile\" className={classes.profileLink}>\n                      Profile\n                      </a>\n                      </MenuItem>\n                      <MenuItem onClick={handleLogout}>Sign Out</MenuItem>\n                  </Menu>\n                  </>\n                ):(\n                <>\n                <Button onClick={openLogin} color=\"secondary\">Login</Button>\n                <Button onClick={handleRegisterOpen} className={classes.loginButtons} color=\"secondary\">Sign Up</Button>\n                </>\n                )}\n               </Toolbar>\n            <Drawer anchor=\"left\" open={open} onClose={closeDrawer}>\n            <List component=\"nav\" \n            className={classes.drawer}\n            subheader={\n                <ListSubheader>\n                    <h3 className={classes.subheader}>Collections</h3>\n                </ListSubheader>\n            }\n            >\n                {collections.map((c)=> {\n                    return (\n                        \n                        <DrawerList title={c.title} id={c.id} collection={c} key={c.id} />\n                        \n                    )\n                })}\n                <ListItem button onClick={handleCollectionOpen}>\n                    <ListItemIcon>\n                        <AddIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"New Collection\"/>\n                </ListItem>\n            </List>\n            </Drawer>\n            <Dialog open={loginOpen} onClose={closeLogin}>\n            <DialogContent className={classes.loginContent}>\n                <TextField className={classes.loginFields} onChange={handleUsernameChange} autoFocus label=\"Username\" />\n                <TextField className={classes.loginFields} onChange={handlePasswordChange} autoFocus label=\"Password\" type=\"password\"/>\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\">Forgot Password?</Button>\n                <Button onClick={handleLogin} color=\"primary\">Login</Button>\n            </DialogActions>\n            </Dialog>\n            <Snackbar open={success} autoHideDuration={6000} onClose={closeSuccess}>\n                <Alert onClose={closeSuccess} severity=\"success\">\n                    Successfully Logged In!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={loginError} autoHideDuration={6000} onClose={closeError}>\n                <Alert onClose={closeError} severity=\"error\">\n                    Invalid Login\n                </Alert>\n            </Snackbar>\n            <Snackbar open={collectsuccess} autoHideDuration={6000} onClose={closeCollectSuccess}>\n                <Alert onClose={closeCollectSuccess} severity=\"success\">\n                    New Collection Created!\n                </Alert>\n            </Snackbar>\n            <Snackbar open={collecterror} onClose={closeCollectError}>\n                <Alert onClose={closeCollectError} severity=\"error\">\n                    Error Occured\n                </Alert>\n            </Snackbar>\n            <Dialog open={upload} onClose={closeUpload} className={classes.uploadDialog}>\n                {uploading ? (\n                    <CircularProgress className={classes.uploadSpinner}/>\n                ):(\n                    <>\n                <DialogContent>\n        \n                <Dropzone onDrop={drop}>\n                \n  {({getRootProps, getInputProps}) => (\n    <div className={classes.dropspace}>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {file ? (\n<p>{file.name}</p>\n        ):(\n<p>Drop Img or Click to Select</p>\n        )}\n      </div>\n    </div>\n  )}\n</Dropzone>\n<div>\n<FormControl className={classes.collectionSelect}>\n<InputLabel id=\"collect-select\">Collections</InputLabel>\n<Select\nvalue={selectedCollection}\nonChange={handleCollectedSelection}\nlabelId=\"collect-select\"\n\n>\n    {collections.map((c) => {\n        return (\n        <MenuItem value={c.id}>{c.title}</MenuItem>\n        )\n    })}\n</Select>\n</FormControl>\n</div>\n                </DialogContent>\n                <DialogActions>\n                <Button color=\"primary\" onClick={closeUpload}>Cancel</Button>\n                    <Button color=\"primary\" onClick={handleUpload}>Upload</Button>\n                </DialogActions>\n                </>\n                )}\n            </Dialog>\n            <Dialog open={newCollection} onClose={handleCollectionClose}>\n            <DialogTitle>New Collection</DialogTitle>\n            <DialogContent>\n            <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Title\"\n            type=\"name\"\n            fullWidth\n            onChange={handleCollectionChange}\n          />\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={handleCollectionClose} color=\"primary\">Cancel</Button>\n            <Button onClick={submitCollection} color=\"primary\">Submit</Button>\n            </DialogActions>\n            </Dialog>\n            <Dialog open={registerOpen} onClose={handleRegisterClose}>\n                <DialogContent>\n                    <FormControl>\n                <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"Username\"\n        onChange={handleRegisterUsernameChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"Password\"\n        type=\"password\"\n        onChange={handleRegisterPasswordChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <VpnKeyIcon/>\n            </InputAdornment>\n          ),\n        }}\n      />\n       <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"Email\"\n        onChange={handleRegisterEmailChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <EmailIcon/>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"Picture\"\n        type=\"file\"\n        onChange={handleFileChange}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <FileCopyIcon/>\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      </FormControl>\n                </DialogContent>\n                <DialogActions>\n            <Button onClick={handleRegisterClose} color=\"primary\">Cancel</Button>\n            <Button onClick={handleRegister} color=\"primary\">Submit</Button>\n            </DialogActions>\n            </Dialog>\n        </AppBar>\n       \n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n      isLoggedIn: state.auth.isLoggedIn,\n      message: state.message\n    }\n  }\n  \n  const mapDispatchToProps = dispatch => {\n    return{\n      onLogIn: (username,password) => dispatch(login(username,password)),\n      onSearch: (tag) => dispatch(getTags(tag)),\n      onAllImgs: () => dispatch(getAllImgs()),\n      onLogout: () => dispatch(logout()),\n\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Nav)","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE\n} from './type'\nimport AuthService from '../../services/auth.service'\n\nexport const register = (username, email,password,avatarurl) => (dispatch) => {\n    return AuthService.register(username, email, password,avatarurl).then(\n        (res) => {\n            dispatch({\n                type: REGISTER_SUCCESS\n            });\n            dispatch({\n                type:SET_MESSAGE,\n                payload: res.data.message\n            });\n\n            return Promise.resolve()\n        },\n        (error) => {\n            const message =\n            (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n            error.message ||\n            error.toString()\n\n            dispatch({\n                type: REGISTER_FAIL\n\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message\n            });\n\n            return Promise.reject()\n        }\n    )\n}\n\nexport const login = (username, password) => (dispatch) => {\n    return AuthService.login(username, password).then(\n        (data) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: {user: data}\n            })\n\n            return Promise.resolve()\n        },\n        (error) => {\n            const message =\n            (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n            error.message ||\n            error.toString()\n\n            dispatch({\n                type: LOGIN_FAIL\n            });\n\n            dispatch({\n                type:SET_MESSAGE,\n                payload: message\n            })\n\n            return Promise.reject()\n        }\n    )\n}\n\nexport const logout = () => (dispatch) => {\n    AuthService.logout()\n\n    dispatch({\n        type: LOGOUT\n    })\n}","import {useEffect} from 'react'\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile'\nimport Container from '@material-ui/core/Container'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport {connect} from 'react-redux'\nimport {getAllImgs} from '../../store/actions/imgs'\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport GetAppIcon from '@material-ui/icons/GetApp'; \nimport { IconButton } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography'\nconst useStyles = makeStyles((theme) => ({\n    root:{\n        backgroundColor: '#bdbdbd'\n    },\n    spinner:{\n        margin:0,\n        position: 'absolute',\n        top: '50%',\n        transform: 'translate(0, -50%)',\n\n    },\n    gridTitle:{\n        visibility:'hidden',\n        '&:hover':{\n            visibility:'visible'\n        }\n    },\n    grid:{\n        marginTop: '100px'\n    },\n    downloadLink:{\n        textDecoration: 'none',\n        color: '#fafafa'\n    }\n}))\n\nconst Home = (props) => {\n    const classes = useStyles()\n    const theme = useTheme()\n    // eslint-disable-next-line\n    useEffect(() => props.onAllImgs(),[])\n    const size = useMediaQuery(theme.breakpoints.down('sm'))\n    let columns = 3\n    if(size === true){\n        columns = 1\n    }\n    \n    return(\n        <div>\n        <Container maxWidth=\"lg\" className={classes.grid}>\n        <div>\n        {props.imgs.loading ? (\n            <CircularProgress className={classes.spinner}/>\n        ):(\n            \n         <div>\n            {props.imgs.noImages ? (\n                <Typography variant=\"h2\">No Images Found...oops</Typography>\n            ):(\n        <GridList cellHeight={500} cols={columns} spacing={12} >\n            {props.imgs.imgs.map((i) => {\n                return(\n                \n                    <GridListTile key={i.id} cols={1}>\n                        <LazyLoadImage height={500} width={403} src={i.imageurl} alt={i.tags[0]}/>\n                        \n                    <GridListTileBar title={i.tags[0]} subtitle={<span>Uploaded By: {i.user[0].username}</span>} actionIcon={<IconButton color=\"secondary\"><a href={i.imageurl} className={classes.downloadLink}> <GetAppIcon/></a> </IconButton>}/>\n                    </GridListTile>\n                   \n                )\n            })}\n            \n        </GridList>\n            )}\n        </div>\n        )}\n        </div>  \n        </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return{\n        imgs: state.imgs,\n        loading: state.loading,\n        noImages: state.noImages\n\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n        onAllImgs: () => dispatch(getAllImgs())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (Home)","import {useLocation} from 'react-router-dom'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport {Paper, Container} from '@material-ui/core/'\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport GetAppIcon from '@material-ui/icons/GetApp'; \nimport { IconButton } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nconst useStyles = makeStyles((theme) => ({\n    test:{\n        marginTop: '100px'\n    },\n    title: {\n        padding: 10,\n        fontFamily: [\n            'Pacifico',\n            'cursive'\n        ],\n        \n    },\n    downloadLink:{\n        textDecoration: 'none',\n        color: '#fafafa'\n    }\n    \n}))\nconst Collection = () => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const {state} = useLocation()\n    const size = useMediaQuery(theme.breakpoints.down('sm'))\n    const [noImages, setNoImages] = useState(false)\n    let columns = 3\n    if(size === true){\n        columns = 1\n    }\n// eslint-disable-next-line\n    useEffect(()=> {\n        if(state.imgs.length === 0){\n            setNoImages(true)\n        } else{\n            setNoImages(false)\n        }\n    })\n    return(\n        <Container maxWidth=\"md\">\n        <Paper elevation={3} className={classes.test}>\n            <h1 className={classes.title}>{state.title}</h1>\n            \n        </Paper>\n        {noImages ? (\n<h1>No Images Available</h1>\n        ):(\n        <GridList cellHeight={500} cols={columns} spacing={12}>\n            {state.imgs.map((i) => {\n                return(\n                    <GridListTile key={i.id} cols={1}>\n                        <LazyLoadImage height={500} width={403} src={i.imageurl} alt={i.tags[0]}/>\n                        <GridListTileBar title={i.tags[0]} subtitle={<span>Uploaded By: {i.user[0].username}</span>} actionIcon={<IconButton color=\"secondary\"><a href={i.imageurl} className={classes.downloadLink}> <GetAppIcon/></a> </IconButton>}/>\n                    </GridListTile>\n                )\n            })}\n            \n        </GridList>\n        )}\n        </Container>\n    )\n}\n\nexport default Collection","import {Paper, Container} from '@material-ui/core/'\nimport {makeStyles, useTheme} from '@material-ui/core/styles'\nimport {connect} from 'react-redux'\nimport {useEffect,useState} from 'react'\nimport axios from 'axios'\nimport authHeader from '../../services/authheader'\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile'\nimport GridListTileBar from '@material-ui/core/GridListTileBar'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport GetAppIcon from '@material-ui/icons/GetApp'; \nimport { IconButton } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n    profilebox:{\n        marginTop: '100px',\n        padding: '10px',\n        marginBottom: '50px'\n    },\n    avatar:{\n        width: theme.spacing(12),\n        height: theme.spacing(12),\n        margin: 'auto',\n        padding: '20px',\n    },\n    \n    spinner:{\n        margin:0,\n        position: 'absolute',\n        top: '50%',\n        transform: 'translate(0, -50%)',\n\n    },\n    downloadLink:{\n        textDecoration: 'none',\n        color: '#fafafa'\n    }\n}))\nconst Profile = (props) => {\n    const classes = useStyles()\n    const [profile, setProfile] = useState([])\n    const [isloading, setIsLoading] = useState(true)\n    const [hasImages, setHasImages] = useState(false)\n    const theme = useTheme()\n    const size = useMediaQuery(theme.breakpoints.down('sm'))\n    let columns = 3\n    if(size === true){\n        columns = 1\n    }\n    let user = null\n    if(props.isLoggedIn){\n        user = JSON.parse(localStorage.getItem('user'))\n        \n    }\n    \n    useEffect(() => {\n        axios.get('https://imgl.azurewebsites.net/user/' + user.user[0].id, {headers: authHeader()})\n        .then(res =>{\n            setProfile(res.data)\n            console.log(res.data)\n            setIsLoading(false)\n            if(res.data.images.length === 0){\n                setHasImages(true)\n            } \n        })\n        // eslint-disable-next-line\n    },[])\n    \n    \n    return (\n        <Container maxWidth=\"md\">\n            {isloading ? (\n                <CircularProgress className={classes.spinner}/>\n            ):(\n            <div>\n            <Paper elevation={3} className={classes.profilebox}>\n                <Avatar alt={profile.username} src={profile.pic} className={classes.avatar}/>\n                <Typography variant='h4' gutterBottom>\n                    @{profile.username}\n                </Typography>\n                <Typography variant='subtitle1' gutterBottom>\n                    {profile.email}\n                </Typography>\n            </Paper>\n            {hasImages ? (\n                <h5>No Images Found...Start Uploading</h5>\n            ):(\n            <GridList cellHeight={500} cols={columns} spacing={12}>\n            {profile.images.map((i) => {\n                return(\n                    <GridListTile key={i.id} cols={1}>\n                        <LazyLoadImage height={500} width={403} src={i.imageurl} alt={i.tags[0]}/>\n                        <GridListTileBar title={i.tags[0]} subtitle={<span>Uploaded By: {i.user[0].username}</span>} actionIcon={<IconButton color=\"secondary\"><a href={i.imageurl} className={classes.downloadLink}> <GetAppIcon/></a> </IconButton>}/>\n                    </GridListTile>\n                )\n            })}\n            \n        </GridList>\n            )}\n        </div>\n            )}\n        </Container>\n\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n      isLoggedIn: state.auth.isLoggedIn,\n      message: state.message\n    }\n  }\nexport default connect(mapStateToProps) (Profile)","import './App.css';\nimport Nav from './components/Nav'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from './pages/Home'\nimport Collection from './pages/Collection'\nimport Profile from './pages/Profile'\nimport {useEffect} from 'react'\nfunction App() {\n  let interval = 15*60*1000\n useEffect(() => {\n   setInterval(\n     function(){\n       localStorage.removeItem('user')\n     }, interval\n   )\n })\n  return (\n    <Router>\n    <div className=\"App\">\n   <Nav/>\n   <Switch>\n    <Route exact path='/'>\n      <Home/>\n    </Route>\n    <Route exact path='/c/:title'>\n      <Collection/>\n    </Route>\n    <Route exact path ='/profile'>\n      <Profile/>\n    </Route>\n   </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/type'\n\nconst user = JSON.parse(localStorage.getItem(\"user\"))\n\nconst intialState = user\n? {isLoggedIn: true, user}\n: {isLoggedIn: false, user: null}\n// eslint-disable-next-line\nexport default function (state=intialState, action) {\n    const {type, payload} = action;\n\n    switch (type) {\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: false\n            }\n        case REGISTER_FAIL:\n            return{\n                ...state,\n                isLoggedIn: false\n            }\n        case LOGIN_SUCCESS:\n            return{\n                ...state,\n                isLoggedIn: true,\n                user: payload.user\n            }\n        case LOGIN_FAIL:\n            return{\n                ...state,\n                isLoggedIn: false\n                \n            }\n        case LOGOUT:\n            return{\n                ...state,\n                isLoggedIn: false,\n                user: null\n            }\n        default:\n            return state\n    }\n}","import {SET_MESSAGE, CLEAR_MESSAGE} from '../actions/type'\n\nconst intialState = {}\n// eslint-disable-next-line\nexport default function(state = intialState, action){\n    const {type, payload} = action\n\n    switch (type) {\n        case SET_MESSAGE:\n            return {message: payload}\n        case CLEAR_MESSAGE:\n            return {message: \"\"}\n        default:\n            return state\n    }\n}","import {GETALL, SETLOADING,GETBYTAG, SETNOIMAGES, SETIMAGES} from '../actions/type'\n\nconst initialState = {\n    imgs: [],\n    loading: true,\n    noImages: false\n}\n// eslint-disable-next-line\nexport default function (state=initialState, action){\n    switch (action.type){\n        case GETALL:\n            return{\n                ...state,\n                imgs: action.value\n\n            }\n        case GETBYTAG:\n            return{\n                ...state,\n                imgs: action.value\n            }\n        case SETLOADING:\n            return{\n                ...state,\n                loading: false\n            }\n        case SETNOIMAGES:\n            return{\n                ...state,\n                noImages: true\n            }\n        case SETIMAGES:\n            return{\n                ...state,\n                noImages: false\n            }\n        \n        \n        default:\n            return state\n    }\n    \n}","import {combineReducers} from 'redux'\nimport auth from \"./auth\"\nimport message from './message'\nimport imgs from './imgs'\nexport default combineReducers({\n    auth,\n    message,\n    imgs\n})","import {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles'\nimport {Provider} from 'react-redux'\nimport store from './store'\nconst theme = createMuiTheme({\n  palette:{\n   primary:{\n     main: '#212121',\n     light: '#424242',\n     dark: '#212121'\n   },\n   secondary: {\n     main: '#fafafa',\n     light: '#fafafa',\n     dark: '#fafafa'\n   }\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n    <App />\n    </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}